// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @unique @default(uuid())
  username  String    @unique
  /// @TypeGraphQL.omit(output: true)
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  player    Player?
  Token     Session[]

  @@map("users")
}

model Board {
  id        String   @unique @default(uuid())
  players   Player[]
  status    String   @default("NOT_STARTED")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("boards")
}

model Player {
  id        String   @unique @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  /// @TypeGraphQL.omit(input: true)
  money     String   @default("0")
  /// @TypeGraphQL.omit(input: true)
  square    String   @default("INIT")
  /// @TypeGraphQL.omit(input: true)
  palyable  Boolean  @default(false)
  Board     Board?   @relation(fields: [boardId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  boardId   String?

  @@map("players")
}

model Session {
  token     String   @unique @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  expired   Boolean  @default(false)

  @@map("sessions")
}
